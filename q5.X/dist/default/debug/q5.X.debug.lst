

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Wed Jan 06 11:30:51 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     _LATD	set	3980
    58  0000                     _TRISD	set	3989
    59  0000                     _TRISC	set	3988
    60  0000                     _TXREG	set	4013
    61  0000                     _SPBRG	set	4015
    62  0000                     _TXSTA	set	4012
    63  0000                     _RCSTA	set	4011
    64  0000                     _RCREG	set	4014
    65  0000                     _PEIE	set	32662
    66  0000                     _GIE	set	32663
    67  0000                     _TXIF	set	31988
    68  0000                     _TXIE	set	31980
    69  0000                     _RCIE	set	31981
    70  0000                     _RCIF	set	31989
    71                           
    72                           	psect	smallconst
    73  000800                     __psmallconst:
    74                           	callstack 0
    75  000800  00                 	db	0
    76  000801                     STR_9:
    77  000801  0D                 	db	13
    78  000802  28                 	db	40
    79  000803  43                 	db	67	;'C'
    80  000804  29                 	db	41
    81  000805  20                 	db	32
    82  000806  41                 	db	65	;'A'
    83  000807  6C                 	db	108	;'l'
    84  000808  74                 	db	116	;'t'
    85  000809  65                 	db	101	;'e'
    86  00080A  72                 	db	114	;'r'
    87  00080B  6E                 	db	110	;'n'
    88  00080C  61                 	db	97	;'a'
    89  00080D  6E                 	db	110	;'n'
    90  00080E  63                 	db	99	;'c'
    91  00080F  69                 	db	105	;'i'
    92  000810  61                 	db	97	;'a'
    93  000811  20                 	db	32
    94  000812  65                 	db	101	;'e'
    95  000813  6E                 	db	110	;'n'
    96  000814  74                 	db	116	;'t'
    97  000815  72                 	db	114	;'r'
    98  000816  65                 	db	101	;'e'
    99  000817  20                 	db	32
   100  000818  6C                 	db	108	;'l'
   101  000819  65                 	db	101	;'e'
   102  00081A  64                 	db	100	;'d'
   103  00081B  73                 	db	115	;'s'
   104  00081C  20                 	db	32
   105  00081D  61                 	db	97	;'a'
   106  00081E  6D                 	db	109	;'m'
   107  00081F  61                 	db	97	;'a'
   108  000820  72                 	db	114	;'r'
   109  000821  65                 	db	101	;'e'
   110  000822  6C                 	db	108	;'l'
   111  000823  6F                 	db	111	;'o'
   112  000824  73                 	db	115	;'s'
   113  000825  20                 	db	32
   114  000826  65                 	db	101	;'e'
   115  000827  20                 	db	32
   116  000828  76                 	db	118	;'v'
   117  000829  65                 	db	101	;'e'
   118  00082A  72                 	db	114	;'r'
   119  00082B  64                 	db	100	;'d'
   120  00082C  65                 	db	101	;'e'
   121  00082D  73                 	db	115	;'s'
   122  00082E  20                 	db	32
   123  00082F  0A                 	db	10
   124  000830  0D                 	db	13
   125  000831  00                 	db	0
   126  000832                     STR_7:
   127  000832  0D                 	db	13
   128  000833  28                 	db	40
   129  000834  41                 	db	65	;'A'
   130  000835  29                 	db	41
   131  000836  20                 	db	32
   132  000837  52                 	db	82	;'R'
   133  000838  6F                 	db	111	;'o'
   134  000839  74                 	db	116	;'t'
   135  00083A  61                 	db	97	;'a'
   136  00083B  63                 	db	99	;'c'
   137  00083C  61                 	db	97	;'a'
   138  00083D  6F                 	db	111	;'o'
   139  00083E  20                 	db	32
   140  00083F  69                 	db	105	;'i'
   141  000840  6E                 	db	110	;'n'
   142  000841  69                 	db	105	;'i'
   143  000842  6E                 	db	110	;'n'
   144  000843  74                 	db	116	;'t'
   145  000844  65                 	db	101	;'e'
   146  000845  72                 	db	114	;'r'
   147  000846  72                 	db	114	;'r'
   148  000847  75                 	db	117	;'u'
   149  000848  70                 	db	112	;'p'
   150  000849  74                 	db	116	;'t'
   151  00084A  61                 	db	97	;'a'
   152  00084B  20                 	db	32
   153  00084C  61                 	db	97	;'a'
   154  00084D  20                 	db	32
   155  00084E  65                 	db	101	;'e'
   156  00084F  73                 	db	115	;'s'
   157  000850  71                 	db	113	;'q'
   158  000851  75                 	db	117	;'u'
   159  000852  65                 	db	101	;'e'
   160  000853  72                 	db	114	;'r'
   161  000854  64                 	db	100	;'d'
   162  000855  61                 	db	97	;'a'
   163  000856  20                 	db	32
   164  000857  0A                 	db	10
   165  000858  0D                 	db	13
   166  000859  00                 	db	0
   167  00085A                     STR_8:
   168  00085A  0D                 	db	13
   169  00085B  28                 	db	40
   170  00085C  42                 	db	66	;'B'
   171  00085D  29                 	db	41
   172  00085E  20                 	db	32
   173  00085F  52                 	db	82	;'R'
   174  000860  6F                 	db	111	;'o'
   175  000861  74                 	db	116	;'t'
   176  000862  61                 	db	97	;'a'
   177  000863  63                 	db	99	;'c'
   178  000864  61                 	db	97	;'a'
   179  000865  6F                 	db	111	;'o'
   180  000866  20                 	db	32
   181  000867  69                 	db	105	;'i'
   182  000868  6E                 	db	110	;'n'
   183  000869  69                 	db	105	;'i'
   184  00086A  6E                 	db	110	;'n'
   185  00086B  74                 	db	116	;'t'
   186  00086C  65                 	db	101	;'e'
   187  00086D  72                 	db	114	;'r'
   188  00086E  72                 	db	114	;'r'
   189  00086F  75                 	db	117	;'u'
   190  000870  70                 	db	112	;'p'
   191  000871  74                 	db	116	;'t'
   192  000872  61                 	db	97	;'a'
   193  000873  20                 	db	32
   194  000874  61                 	db	97	;'a'
   195  000875  20                 	db	32
   196  000876  64                 	db	100	;'d'
   197  000877  69                 	db	105	;'i'
   198  000878  72                 	db	114	;'r'
   199  000879  65                 	db	101	;'e'
   200  00087A  69                 	db	105	;'i'
   201  00087B  74                 	db	116	;'t'
   202  00087C  61                 	db	97	;'a'
   203  00087D  20                 	db	32
   204  00087E  0A                 	db	10
   205  00087F  0D                 	db	13
   206  000880  00                 	db	0
   207  000881                     STR_12:
   208  000881  0D                 	db	13
   209  000882  28                 	db	40
   210  000883  46                 	db	70	;'F'
   211  000884  29                 	db	41
   212  000885  20                 	db	32
   213  000886  50                 	db	80	;'P'
   214  000887  61                 	db	97	;'a'
   215  000888  72                 	db	114	;'r'
   216  000889  61                 	db	97	;'a'
   217  00088A  72                 	db	114	;'r'
   218  00088B  20                 	db	32
   219  00088C  71                 	db	113	;'q'
   220  00088D  75                 	db	117	;'u'
   221  00088E  61                 	db	97	;'a'
   222  00088F  6C                 	db	108	;'l'
   223  000890  71                 	db	113	;'q'
   224  000891  75                 	db	117	;'u'
   225  000892  65                 	db	101	;'e'
   226  000893  72                 	db	114	;'r'
   227  000894  20                 	db	32
   228  000895  72                 	db	114	;'r'
   229  000896  6F                 	db	111	;'o'
   230  000897  74                 	db	116	;'t'
   231  000898  61                 	db	97	;'a'
   232  000899  63                 	db	99	;'c'
   233  00089A  61                 	db	97	;'a'
   234  00089B  6F                 	db	111	;'o'
   235  00089C  20                 	db	32
   236  00089D  0A                 	db	10
   237  00089E  0D                 	db	13
   238  00089F  00                 	db	0
   239  0008A0                     STR_6:
   240  0008A0  28                 	db	40
   241  0008A1  46                 	db	70	;'F'
   242  0008A2  29                 	db	41
   243  0008A3  20                 	db	32
   244  0008A4  50                 	db	80	;'P'
   245  0008A5  61                 	db	97	;'a'
   246  0008A6  72                 	db	114	;'r'
   247  0008A7  61                 	db	97	;'a'
   248  0008A8  72                 	db	114	;'r'
   249  0008A9  20                 	db	32
   250  0008AA  71                 	db	113	;'q'
   251  0008AB  75                 	db	117	;'u'
   252  0008AC  61                 	db	97	;'a'
   253  0008AD  6C                 	db	108	;'l'
   254  0008AE  71                 	db	113	;'q'
   255  0008AF  75                 	db	117	;'u'
   256  0008B0  65                 	db	101	;'e'
   257  0008B1  72                 	db	114	;'r'
   258  0008B2  20                 	db	32
   259  0008B3  72                 	db	114	;'r'
   260  0008B4  6F                 	db	111	;'o'
   261  0008B5  74                 	db	116	;'t'
   262  0008B6  61                 	db	97	;'a'
   263  0008B7  63                 	db	99	;'c'
   264  0008B8  61                 	db	97	;'a'
   265  0008B9  6F                 	db	111	;'o'
   266  0008BA  20                 	db	32
   267  0008BB  0A                 	db	10
   268  0008BC  0D                 	db	13
   269  0008BD  20                 	db	32
   270  0008BE  00                 	db	0
   271  0008BF                     STR_10:
   272  0008BF  0D                 	db	13
   273  0008C0  28                 	db	40
   274  0008C1  44                 	db	68	;'D'
   275  0008C2  29                 	db	41
   276  0008C3  20                 	db	32
   277  0008C4  45                 	db	69	;'E'
   278  0008C5  66                 	db	102	;'f'
   279  0008C6  65                 	db	101	;'e'
   280  0008C7  69                 	db	105	;'i'
   281  0008C8  74                 	db	116	;'t'
   282  0008C9  6F                 	db	111	;'o'
   283  0008CA  20                 	db	32
   284  0008CB  73                 	db	115	;'s'
   285  0008CC  61                 	db	97	;'a'
   286  0008CD  6E                 	db	110	;'n'
   287  0008CE  66                 	db	102	;'f'
   288  0008CF  6F                 	db	111	;'o'
   289  0008D0  6E                 	db	110	;'n'
   290  0008D1  61                 	db	97	;'a'
   291  0008D2  20                 	db	32
   292  0008D3  0A                 	db	10
   293  0008D4  0D                 	db	13
   294  0008D5  00                 	db	0
   295  0008D6                     STR_11:
   296  0008D6  0D                 	db	13
   297  0008D7  28                 	db	40
   298  0008D8  45                 	db	69	;'E'
   299  0008D9  29                 	db	41
   300  0008DA  20                 	db	32
   301  0008DB  42                 	db	66	;'B'
   302  0008DC  61                 	db	97	;'a'
   303  0008DD  74                 	db	116	;'t'
   304  0008DE  65                 	db	101	;'e'
   305  0008DF  20                 	db	32
   306  0008E0  65                 	db	101	;'e'
   307  0008E1  20                 	db	32
   308  0008E2  76                 	db	118	;'v'
   309  0008E3  6F                 	db	111	;'o'
   310  0008E4  6C                 	db	108	;'l'
   311  0008E5  74                 	db	116	;'t'
   312  0008E6  61                 	db	97	;'a'
   313  0008E7  20                 	db	32
   314  0008E8  0A                 	db	10
   315  0008E9  0D                 	db	13
   316  0008EA  00                 	db	0
   317  0008EB  00                 	db	0	; dummy byte at the end
   318  0000                     
   319                           ; #config settings
   320                           
   321                           	psect	cinit
   322  000F2C                     __pcinit:
   323                           	callstack 0
   324  000F2C                     start_initialization:
   325                           	callstack 0
   326  000F2C                     __initialization:
   327                           	callstack 0
   328                           
   329                           ; Clear objects allocated to COMRAM (7 bytes)
   330  000F2C  EE00  F01D         	lfsr	0,__pbssCOMRAM
   331  000F30  0E07               	movlw	7
   332  000F32                     clear_0:
   333  000F32  6AEE               	clrf	postinc0,c
   334  000F34  06E8               	decf	wreg,f,c
   335  000F36  E1FD               	bnz	clear_0
   336  000F38                     end_of_initialization:
   337                           	callstack 0
   338  000F38                     __end_of__initialization:
   339                           	callstack 0
   340  000F38  9024               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   341  000F3A  9224               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   342  000F3C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   343  000F3E  6EF8               	movwf	tblptru,c
   344  000F40  0E08               	movlw	high __Lsmallconst
   345  000F42  6EF7               	movwf	tblptrh,c
   346  000F44  0100               	movlb	0
   347  000F46  EF76  F004         	goto	_main	;jump to C main() function
   348                           
   349                           	psect	bssCOMRAM
   350  00001D                     __pbssCOMRAM:
   351                           	callstack 0
   352  00001D                     _var2:
   353                           	callstack 0
   354  00001D                     	ds	2
   355  00001F                     _var1:
   356                           	callstack 0
   357  00001F                     	ds	2
   358  000021                     _flag_interrupcao:
   359                           	callstack 0
   360  000021                     	ds	2
   361  000023                     _caracter:
   362                           	callstack 0
   363  000023                     	ds	1
   364                           
   365                           	psect	cstackCOMRAM
   366  000001                     __pcstackCOMRAM:
   367                           	callstack 0
   368  000001                     ?_strlen:
   369                           	callstack 0
   370  000001                     ?___aldiv:
   371                           	callstack 0
   372  000001                     envia_serial@valor:
   373                           	callstack 0
   374  000001                     strlen@s:
   375                           	callstack 0
   376  000001                     ___aldiv@dividend:
   377                           	callstack 0
   378                           
   379                           ; 4 bytes @ 0x0
   380  000001                     	ds	2
   381  000003                     strlen@a:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x2
   385  000003                     	ds	2
   386  000005                     envia_texto_serial@frase:
   387                           	callstack 0
   388  000005                     ___aldiv@divisor:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x4
   392  000005                     	ds	2
   393  000007                     ??_envia_texto_serial:
   394                           
   395                           ; 1 bytes @ 0x6
   396  000007                     	ds	2
   397  000009                     envia_texto_serial@tamanho:
   398                           	callstack 0
   399  000009                     ___aldiv@counter:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x8
   403  000009                     	ds	1
   404  00000A                     envia_texto_serial@indice:
   405                           	callstack 0
   406  00000A                     ___aldiv@sign:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x9
   410  00000A                     	ds	1
   411  00000B                     ___aldiv@quotient:
   412                           	callstack 0
   413                           
   414                           ; 4 bytes @ 0xA
   415  00000B                     	ds	4
   416  00000F                     inicializa_RS232@velocidade:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0xE
   420  00000F                     	ds	4
   421  000013                     inicializa_RS232@modo:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x12
   425  000013                     	ds	2
   426  000015                     inicializa_RS232@valor:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x14
   430  000015                     	ds	2
   431  000017                     _inicializa_RS232$706:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x16
   435  000017                     	ds	4
   436  00001B                     ??_main:
   437                           
   438                           ; 1 bytes @ 0x1A
   439  00001B                     	ds	2
   440                           
   441 ;;
   442 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   443 ;;
   444 ;; *************** function _main *****************
   445 ;; Defined at:
   446 ;;		line 58 in file "q5.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   460 ;;      Params:         0       0       0       0       0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0       0       0       0       0
   462 ;;      Temps:          2       0       0       0       0       0       0       0       0
   463 ;;      Totals:         2       0       0       0       0       0       0       0       0
   464 ;;Total ram usage:        2 bytes
   465 ;; Hardware stack levels required when called:    3
   466 ;; This function calls:
   467 ;;		_envia_texto_serial
   468 ;;		_inicializa_RS232
   469 ;; This function is called by:
   470 ;;		Startup code after reset
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           	psect	text0
   475  0008EC                     __ptext0:
   476                           	callstack 0
   477  0008EC                     _main:
   478                           	callstack 28
   479  0008EC                     
   480                           ;q5.c: 61: 
   481  0008EC  0EC0               	movlw	192
   482  0008EE  6E94               	movwf	148,c	;volatile
   483  0008F0                     
   484                           ;q5.c: 62:     while (1) {
   485  0008F0  0E80               	movlw	128
   486  0008F2  6E0F               	movwf	inicializa_RS232@velocidade^0,c
   487  0008F4  0E25               	movlw	37
   488  0008F6  6E10               	movwf	(inicializa_RS232@velocidade+1)^0,c
   489  0008F8  0E00               	movlw	0
   490  0008FA  6E11               	movwf	(inicializa_RS232@velocidade+2)^0,c
   491  0008FC  0E00               	movlw	0
   492  0008FE  6E12               	movwf	(inicializa_RS232@velocidade+3)^0,c
   493  000900  0E00               	movlw	0
   494  000902  6E14               	movwf	(inicializa_RS232@modo+1)^0,c
   495  000904  0E01               	movlw	1
   496  000906  6E13               	movwf	inicializa_RS232@modo^0,c
   497  000908  ECD6  F006         	call	_inicializa_RS232	;wreg free
   498  00090C                     
   499                           ;q5.c: 63:         if(flag_interrupcao == 1) {
   500  00090C  8EF2               	bsf	4082,7,c	;volatile
   501  00090E                     
   502                           ;q5.c: 64:             if (caracter == 'A'){
   503  00090E  8CF2               	bsf	4082,6,c	;volatile
   504  000910                     
   505                           ;q5.c: 65:                 envia_texto_serial("\r(A) Rotacao ininterrupta a esquerda \n\
      +                          r");
   506  000910  0E00               	movlw	0
   507  000912  6E95               	movwf	149,c	;volatile
   508  000914                     
   509                           ;q5.c: 67:                 while(caracter != 'F'){
   510  000914  0E33               	movlw	low (STR_7+1)
   511  000916  6E05               	movwf	envia_texto_serial@frase^0,c
   512  000918  0E08               	movlw	high (STR_7+1)
   513  00091A  6E06               	movwf	(envia_texto_serial@frase+1)^0,c
   514  00091C  EC54  F007         	call	_envia_texto_serial	;wreg free
   515  000920                     
   516                           ;q5.c: 68:                     _delay((unsigned long)((150)*(4000000/4000.0)));
   517  000920  0E5B               	movlw	low (STR_8+1)
   518  000922  6E05               	movwf	envia_texto_serial@frase^0,c
   519  000924  0E08               	movlw	high (STR_8+1)
   520  000926  6E06               	movwf	(envia_texto_serial@frase+1)^0,c
   521  000928  EC54  F007         	call	_envia_texto_serial	;wreg free
   522  00092C                     
   523                           ;q5.c: 69:                     LATD = LATD << 1;
   524  00092C  0E02               	movlw	low (STR_9+1)
   525  00092E  6E05               	movwf	envia_texto_serial@frase^0,c
   526  000930  0E08               	movlw	high (STR_9+1)
   527  000932  6E06               	movwf	(envia_texto_serial@frase+1)^0,c
   528  000934  EC54  F007         	call	_envia_texto_serial	;wreg free
   529  000938                     
   530                           ;q5.c: 70:                     if (LATD==0b10000000){
   531  000938  0EC0               	movlw	low (STR_10+1)
   532  00093A  6E05               	movwf	envia_texto_serial@frase^0,c
   533  00093C  0E08               	movlw	high (STR_10+1)
   534  00093E  6E06               	movwf	(envia_texto_serial@frase+1)^0,c
   535  000940  EC54  F007         	call	_envia_texto_serial	;wreg free
   536  000944                     
   537                           ;q5.c: 71:                         _delay((unsigned long)((150)*(4000000/4000.0)));
   538  000944  0ED7               	movlw	low (STR_11+1)
   539  000946  6E05               	movwf	envia_texto_serial@frase^0,c
   540  000948  0E08               	movlw	high (STR_11+1)
   541  00094A  6E06               	movwf	(envia_texto_serial@frase+1)^0,c
   542  00094C  EC54  F007         	call	_envia_texto_serial	;wreg free
   543  000950                     
   544                           ;q5.c: 72:                         LATD = 0b00000001;
   545  000950  0EA0               	movlw	low STR_6
   546  000952  6E05               	movwf	envia_texto_serial@frase^0,c
   547  000954  0E08               	movlw	high STR_6
   548  000956  6E06               	movwf	(envia_texto_serial@frase+1)^0,c
   549  000958  EC54  F007         	call	_envia_texto_serial	;wreg free
   550  00095C                     l1130:
   551                           
   552                           ;q5.c: 75:             }
   553  00095C  0421               	decf	_flag_interrupcao^0,w,c
   554  00095E  1022               	iorwf	(_flag_interrupcao+1)^0,w,c
   555  000960  A4D8               	btfss	status,2,c
   556  000962  EFB5  F004         	goto	u381
   557  000966  EFB7  F004         	goto	u380
   558  00096A                     u381:
   559  00096A  EFAE  F004         	goto	l1130
   560  00096E                     u380:
   561  00096E                     
   562                           ;q5.c: 76:             if (caracter == 'B'){
   563  00096E  0E41               	movlw	65
   564  000970  1823               	xorwf	_caracter^0,w,c
   565  000972  A4D8               	btfss	status,2,c
   566  000974  EFBE  F004         	goto	u391
   567  000978  EFC0  F004         	goto	u390
   568  00097C                     u391:
   569  00097C  EFF1  F004         	goto	l1150
   570  000980                     u390:
   571  000980                     
   572                           ;q5.c: 77:                 envia_texto_serial("\r(B) Rotacao ininterrupta a direita \n\r
      +                          ");
   573  000980  0E32               	movlw	low STR_7
   574  000982  6E05               	movwf	envia_texto_serial@frase^0,c
   575  000984  0E08               	movlw	high STR_7
   576  000986  6E06               	movwf	(envia_texto_serial@frase+1)^0,c
   577  000988  EC54  F007         	call	_envia_texto_serial	;wreg free
   578  00098C                     l1136:
   579                           
   580                           ;q5.c: 78:                 LATD = 0b10000000;
   581  00098C  0E01               	movlw	1
   582  00098E  6E8C               	movwf	140,c	;volatile
   583                           
   584                           ;q5.c: 79:                 while(caracter != 'F'){
   585  000990  EFE8  F004         	goto	l1148
   586  000994                     l1138:
   587                           
   588                           ;q5.c: 80:                     _delay((unsigned long)((150)*(4000000/4000.0)));
   589  000994  0EC3               	movlw	195
   590  000996  6E1B               	movwf	??_main^0,c
   591  000998  0ECD               	movlw	205
   592  00099A                     u567:
   593  00099A  2EE8               	decfsz	wreg,f,c
   594  00099C  D7FE               	bra	u567
   595  00099E  2E1B               	decfsz	??_main^0,f,c
   596  0009A0  D7FC               	bra	u567
   597  0009A2  F000               	nop	
   598  0009A4                     
   599                           ;q5.c: 81:                     LATD = LATD >> 1;
   600  0009A4  508C               	movf	140,w,c	;volatile
   601  0009A6  248C               	addwf	140,w,c	;volatile
   602  0009A8  6E8C               	movwf	140,c	;volatile
   603  0009AA                     
   604                           ;q5.c: 82:                     if (LATD==0b00000001){
   605  0009AA  0E80               	movlw	128
   606  0009AC  188C               	xorwf	140,w,c	;volatile
   607  0009AE  A4D8               	btfss	status,2,c
   608  0009B0  EFDC  F004         	goto	u401
   609  0009B4  EFDE  F004         	goto	u400
   610  0009B8                     u401:
   611  0009B8  EFE8  F004         	goto	l1148
   612  0009BC                     u400:
   613  0009BC                     
   614                           ;q5.c: 83:                         _delay((unsigned long)((150)*(4000000/4000.0)));
   615  0009BC  0EC3               	movlw	195
   616  0009BE  6E1B               	movwf	??_main^0,c
   617  0009C0  0ECD               	movlw	205
   618  0009C2                     u577:
   619  0009C2  2EE8               	decfsz	wreg,f,c
   620  0009C4  D7FE               	bra	u577
   621  0009C6  2E1B               	decfsz	??_main^0,f,c
   622  0009C8  D7FC               	bra	u577
   623  0009CA  F000               	nop	
   624  0009CC  EFC6  F004         	goto	l1136
   625  0009D0                     l1148:
   626                           
   627                           ;q5.c: 79:                 while(caracter != 'F'){
   628  0009D0  0E46               	movlw	70
   629  0009D2  1823               	xorwf	_caracter^0,w,c
   630  0009D4  A4D8               	btfss	status,2,c
   631  0009D6  EFEF  F004         	goto	u411
   632  0009DA  EFF1  F004         	goto	u410
   633  0009DE                     u411:
   634  0009DE  EFCA  F004         	goto	l1138
   635  0009E2                     u410:
   636  0009E2                     l1150:
   637                           
   638                           ;q5.c: 88:             if (caracter == 'C'){
   639  0009E2  0E42               	movlw	66
   640  0009E4  1823               	xorwf	_caracter^0,w,c
   641  0009E6  A4D8               	btfss	status,2,c
   642  0009E8  EFF8  F004         	goto	u421
   643  0009EC  EFFA  F004         	goto	u420
   644  0009F0                     u421:
   645  0009F0  EF2A  F005         	goto	l1168
   646  0009F4                     u420:
   647  0009F4                     
   648                           ;q5.c: 89:                 envia_texto_serial("\r(C) Alternancia entre leds amarelos e v
      +                          erdes \n\r");
   649  0009F4  0E5A               	movlw	low STR_8
   650  0009F6  6E05               	movwf	envia_texto_serial@frase^0,c
   651  0009F8  0E08               	movlw	high STR_8
   652  0009FA  6E06               	movwf	(envia_texto_serial@frase+1)^0,c
   653  0009FC  EC54  F007         	call	_envia_texto_serial	;wreg free
   654  000A00                     l1154:
   655                           
   656                           ;q5.c: 90:                 LATD =0b10101010;
   657  000A00  0E80               	movlw	128
   658  000A02  6E8C               	movwf	140,c	;volatile
   659                           
   660                           ;q5.c: 91:                 while(caracter != 'F'){
   661  000A04  EF21  F005         	goto	l1166
   662  000A08                     l1156:
   663                           
   664                           ;q5.c: 92:                     _delay((unsigned long)((150)*(4000000/4000.0)));
   665  000A08  0EC3               	movlw	195
   666  000A0A  6E1B               	movwf	??_main^0,c
   667  000A0C  0ECD               	movlw	205
   668  000A0E                     u587:
   669  000A0E  2EE8               	decfsz	wreg,f,c
   670  000A10  D7FE               	bra	u587
   671  000A12  2E1B               	decfsz	??_main^0,f,c
   672  000A14  D7FC               	bra	u587
   673  000A16  F000               	nop	
   674  000A18                     
   675                           ;q5.c: 93:                     LATD = 0b10101010;
   676  000A18  90D8               	bcf	status,0,c
   677  000A1A  308C               	rrcf	140,w,c	;volatile
   678  000A1C  6E8C               	movwf	140,c	;volatile
   679  000A1E                     
   680                           ;q5.c: 94:                     _delay((unsigned long)((150)*(4000000/4000.0)));
   681  000A1E  048C               	decf	140,w,c	;volatile
   682  000A20  A4D8               	btfss	status,2,c
   683  000A22  EF15  F005         	goto	u431
   684  000A26  EF17  F005         	goto	u430
   685  000A2A                     u431:
   686  000A2A  EF21  F005         	goto	l1166
   687  000A2E                     u430:
   688  000A2E                     
   689                           ;q5.c: 95:                     LATD = 0b01010101;
   690  000A2E  0EC3               	movlw	195
   691  000A30  6E1B               	movwf	??_main^0,c
   692  000A32  0ECD               	movlw	205
   693  000A34                     u597:
   694  000A34  2EE8               	decfsz	wreg,f,c
   695  000A36  D7FE               	bra	u597
   696  000A38  2E1B               	decfsz	??_main^0,f,c
   697  000A3A  D7FC               	bra	u597
   698  000A3C  F000               	nop	
   699  000A3E  EF00  F005         	goto	l1154
   700  000A42                     l1166:
   701                           
   702                           ;q5.c: 91:                 while(caracter != 'F'){
   703  000A42  0E46               	movlw	70
   704  000A44  1823               	xorwf	_caracter^0,w,c
   705  000A46  A4D8               	btfss	status,2,c
   706  000A48  EF28  F005         	goto	u441
   707  000A4C  EF2A  F005         	goto	u440
   708  000A50                     u441:
   709  000A50  EF04  F005         	goto	l1156
   710  000A54                     u440:
   711  000A54                     l1168:
   712                           
   713                           ;q5.c: 100:                 LATD =0b10000001;
   714  000A54  0E43               	movlw	67
   715  000A56  1823               	xorwf	_caracter^0,w,c
   716  000A58  A4D8               	btfss	status,2,c
   717  000A5A  EF31  F005         	goto	u451
   718  000A5E  EF33  F005         	goto	u450
   719  000A62                     u451:
   720  000A62  EF5A  F005         	goto	l1182
   721  000A66                     u450:
   722  000A66                     
   723                           ;q5.c: 101:                 while(caracter != 'F'){
   724  000A66  0E01               	movlw	low STR_9
   725  000A68  6E05               	movwf	envia_texto_serial@frase^0,c
   726  000A6A  0E08               	movlw	high STR_9
   727  000A6C  6E06               	movwf	(envia_texto_serial@frase+1)^0,c
   728  000A6E  EC54  F007         	call	_envia_texto_serial	;wreg free
   729  000A72                     
   730                           ;q5.c: 102:                     _delay((unsigned long)((150)*(4000000/4000.0)));
   731  000A72  0EAA               	movlw	170
   732  000A74  6E8C               	movwf	140,c	;volatile
   733                           
   734                           ;q5.c: 103:                     LATD = 0b01000010;
   735  000A76  EF51  F005         	goto	l1180
   736  000A7A                     l1174:
   737                           
   738                           ;q5.c: 104:                     _delay((unsigned long)((150)*(4000000/4000.0)));
   739  000A7A  0EC3               	movlw	195
   740  000A7C  6E1B               	movwf	??_main^0,c
   741  000A7E  0ECD               	movlw	205
   742  000A80                     u607:
   743  000A80  2EE8               	decfsz	wreg,f,c
   744  000A82  D7FE               	bra	u607
   745  000A84  2E1B               	decfsz	??_main^0,f,c
   746  000A86  D7FC               	bra	u607
   747  000A88  F000               	nop	
   748  000A8A                     
   749                           ;q5.c: 105:                     LATD = 0b00100100;
   750  000A8A  0EAA               	movlw	170
   751  000A8C  6E8C               	movwf	140,c	;volatile
   752  000A8E                     
   753                           ;q5.c: 106:                     _delay((unsigned long)((150)*(4000000/4000.0)));
   754  000A8E  0EC3               	movlw	195
   755  000A90  6E1B               	movwf	??_main^0,c
   756  000A92  0ECD               	movlw	205
   757  000A94                     u617:
   758  000A94  2EE8               	decfsz	wreg,f,c
   759  000A96  D7FE               	bra	u617
   760  000A98  2E1B               	decfsz	??_main^0,f,c
   761  000A9A  D7FC               	bra	u617
   762  000A9C  F000               	nop	
   763                           
   764                           ;q5.c: 107:                     LATD = 0b00011000;
   765  000A9E  0E55               	movlw	85
   766  000AA0  6E8C               	movwf	140,c	;volatile
   767  000AA2                     l1180:
   768                           
   769                           ;q5.c: 103:                     LATD = 0b01000010;
   770  000AA2  0E46               	movlw	70
   771  000AA4  1823               	xorwf	_caracter^0,w,c
   772  000AA6  A4D8               	btfss	status,2,c
   773  000AA8  EF58  F005         	goto	u461
   774  000AAC  EF5A  F005         	goto	u460
   775  000AB0                     u461:
   776  000AB0  EF3D  F005         	goto	l1174
   777  000AB4                     u460:
   778  000AB4                     l1182:
   779                           
   780                           ;q5.c: 110:                     _delay((unsigned long)((150)*(4000000/4000.0)));
   781  000AB4  0E44               	movlw	68
   782  000AB6  1823               	xorwf	_caracter^0,w,c
   783  000AB8  A4D8               	btfss	status,2,c
   784  000ABA  EF61  F005         	goto	u471
   785  000ABE  EF63  F005         	goto	u470
   786  000AC2                     u471:
   787  000AC2  EFB2  F005         	goto	l1208
   788  000AC6                     u470:
   789  000AC6                     
   790                           ;q5.c: 111:                     LATD = 0b01000010;
   791  000AC6  0EBF               	movlw	low STR_10
   792  000AC8  6E05               	movwf	envia_texto_serial@frase^0,c
   793  000ACA  0E08               	movlw	high STR_10
   794  000ACC  6E06               	movwf	(envia_texto_serial@frase+1)^0,c
   795  000ACE  EC54  F007         	call	_envia_texto_serial	;wreg free
   796  000AD2                     l1186:
   797                           
   798                           ;q5.c: 112:                     _delay((unsigned long)((150)*(4000000/4000.0)));
   799  000AD2  0E81               	movlw	129
   800  000AD4  6E8C               	movwf	140,c	;volatile
   801                           
   802                           ;q5.c: 113:                     LATD = 0b10000001;
   803  000AD6  EFA9  F005         	goto	l1206
   804  000ADA                     l1188:
   805                           
   806                           ;q5.c: 114:                 }
   807  000ADA  0EC3               	movlw	195
   808  000ADC  6E1B               	movwf	??_main^0,c
   809  000ADE  0ECD               	movlw	205
   810  000AE0                     u627:
   811  000AE0  2EE8               	decfsz	wreg,f,c
   812  000AE2  D7FE               	bra	u627
   813  000AE4  2E1B               	decfsz	??_main^0,f,c
   814  000AE6  D7FC               	bra	u627
   815  000AE8  F000               	nop	
   816  000AEA                     
   817                           ;q5.c: 115:             }
   818  000AEA  0E42               	movlw	66
   819  000AEC  6E8C               	movwf	140,c	;volatile
   820  000AEE                     
   821                           ;q5.c: 116:             if (caracter == 'E'){
   822  000AEE  0EC3               	movlw	195
   823  000AF0  6E1B               	movwf	??_main^0,c
   824  000AF2  0ECD               	movlw	205
   825  000AF4                     u637:
   826  000AF4  2EE8               	decfsz	wreg,f,c
   827  000AF6  D7FE               	bra	u637
   828  000AF8  2E1B               	decfsz	??_main^0,f,c
   829  000AFA  D7FC               	bra	u637
   830  000AFC  F000               	nop	
   831                           
   832                           ;q5.c: 117:                 envia_texto_serial("\r(E) Bate e volta \n\r");
   833  000AFE  0E24               	movlw	36
   834  000B00  6E8C               	movwf	140,c	;volatile
   835  000B02                     
   836                           ;q5.c: 118:                 LATD = 0b10000001;
   837  000B02  0EC3               	movlw	195
   838  000B04  6E1B               	movwf	??_main^0,c
   839  000B06  0ECD               	movlw	205
   840  000B08                     u647:
   841  000B08  2EE8               	decfsz	wreg,f,c
   842  000B0A  D7FE               	bra	u647
   843  000B0C  2E1B               	decfsz	??_main^0,f,c
   844  000B0E  D7FC               	bra	u647
   845  000B10  F000               	nop	
   846  000B12                     
   847                           ;q5.c: 119:                 _delay((unsigned long)((150)*(4000000/4000.0)));
   848  000B12  0E18               	movlw	24
   849  000B14  6E8C               	movwf	140,c	;volatile
   850                           
   851                           ;q5.c: 120:                 var1 = 0b00000001;
   852  000B16  0EC3               	movlw	195
   853  000B18  6E1B               	movwf	??_main^0,c
   854  000B1A  0ECD               	movlw	205
   855  000B1C                     u657:
   856  000B1C  2EE8               	decfsz	wreg,f,c
   857  000B1E  D7FE               	bra	u657
   858  000B20  2E1B               	decfsz	??_main^0,f,c
   859  000B22  D7FC               	bra	u657
   860  000B24  F000               	nop	
   861  000B26                     
   862                           ;q5.c: 121:                 var2 = 0b10000000;
   863  000B26  0E24               	movlw	36
   864  000B28  6E8C               	movwf	140,c	;volatile
   865  000B2A                     
   866                           ;q5.c: 122:                 while(caracter != 'F'){
   867  000B2A  0EC3               	movlw	195
   868  000B2C  6E1B               	movwf	??_main^0,c
   869  000B2E  0ECD               	movlw	205
   870  000B30                     u667:
   871  000B30  2EE8               	decfsz	wreg,f,c
   872  000B32  D7FE               	bra	u667
   873  000B34  2E1B               	decfsz	??_main^0,f,c
   874  000B36  D7FC               	bra	u667
   875  000B38  F000               	nop	
   876                           
   877                           ;q5.c: 123:                     while(var1 != 0b10000000){
   878  000B3A  0E42               	movlw	66
   879  000B3C  6E8C               	movwf	140,c	;volatile
   880  000B3E                     
   881                           ;q5.c: 124:                         if (caracter == 'F') break;
   882  000B3E  0EC3               	movlw	195
   883  000B40  6E1B               	movwf	??_main^0,c
   884  000B42  0ECD               	movlw	205
   885  000B44                     u677:
   886  000B44  2EE8               	decfsz	wreg,f,c
   887  000B46  D7FE               	bra	u677
   888  000B48  2E1B               	decfsz	??_main^0,f,c
   889  000B4A  D7FC               	bra	u677
   890  000B4C  F000               	nop	
   891  000B4E  EF69  F005         	goto	l1186
   892  000B52                     l1206:
   893                           
   894                           ;q5.c: 113:                     LATD = 0b10000001;
   895  000B52  0E46               	movlw	70
   896  000B54  1823               	xorwf	_caracter^0,w,c
   897  000B56  A4D8               	btfss	status,2,c
   898  000B58  EFB0  F005         	goto	u481
   899  000B5C  EFB2  F005         	goto	u480
   900  000B60                     u481:
   901  000B60  EF6D  F005         	goto	l1188
   902  000B64                     u480:
   903  000B64                     l1208:
   904                           
   905                           ;q5.c: 128:                         _delay((unsigned long)((150)*(4000000/4000.0)));
   906  000B64  0E45               	movlw	69
   907  000B66  1823               	xorwf	_caracter^0,w,c
   908  000B68  A4D8               	btfss	status,2,c
   909  000B6A  EFB9  F005         	goto	u491
   910  000B6E  EFBB  F005         	goto	u490
   911  000B72                     u491:
   912  000B72  EF37  F006         	goto	l1242
   913  000B76                     u490:
   914  000B76                     
   915                           ;q5.c: 129:                     }
   916  000B76  0ED6               	movlw	low STR_11
   917  000B78  6E05               	movwf	envia_texto_serial@frase^0,c
   918  000B7A  0E08               	movlw	high STR_11
   919  000B7C  6E06               	movwf	(envia_texto_serial@frase+1)^0,c
   920  000B7E  EC54  F007         	call	_envia_texto_serial	;wreg free
   921  000B82                     
   922                           ;q5.c: 130:                     while(var1 != 0b00000001){
   923  000B82  0E81               	movlw	129
   924  000B84  6E8C               	movwf	140,c	;volatile
   925  000B86                     
   926                           ;q5.c: 131:                         if (caracter == 'F') break;
   927  000B86  0EC3               	movlw	195
   928  000B88  6E1B               	movwf	??_main^0,c
   929  000B8A  0ECD               	movlw	205
   930  000B8C                     u687:
   931  000B8C  2EE8               	decfsz	wreg,f,c
   932  000B8E  D7FE               	bra	u687
   933  000B90  2E1B               	decfsz	??_main^0,f,c
   934  000B92  D7FC               	bra	u687
   935  000B94  F000               	nop	
   936  000B96                     
   937                           ;q5.c: 132:                         var1 = var1 >> 1;
   938  000B96  0E00               	movlw	0
   939  000B98  6E20               	movwf	(_var1+1)^0,c
   940  000B9A  0E01               	movlw	1
   941  000B9C  6E1F               	movwf	_var1^0,c
   942  000B9E                     
   943                           ;q5.c: 133:                         var2 = var2 << 1;
   944  000B9E  0E00               	movlw	0
   945  000BA0  6E1E               	movwf	(_var2+1)^0,c
   946  000BA2  0E80               	movlw	128
   947  000BA4  6E1D               	movwf	_var2^0,c
   948                           
   949                           ;q5.c: 134:                         LATD = (var1 | var2);
   950  000BA6  EF2E  F006         	goto	l1240
   951  000BAA                     l1220:
   952                           
   953                           ;q5.c: 136:                     }
   954  000BAA  0E46               	movlw	70
   955  000BAC  1823               	xorwf	_caracter^0,w,c
   956  000BAE  A4D8               	btfss	status,2,c
   957  000BB0  EFDC  F005         	goto	u501
   958  000BB4  EFDE  F005         	goto	u500
   959  000BB8                     u501:
   960  000BB8  EFE0  F005         	goto	l1224
   961  000BBC                     u500:
   962  000BBC  EF25  F006         	goto	l1238
   963  000BC0                     l1224:
   964                           
   965                           ;q5.c: 137:                 }
   966  000BC0  90D8               	bcf	status,0,c
   967  000BC2  341F               	rlcf	_var1^0,w,c
   968  000BC4  6E1F               	movwf	_var1^0,c
   969  000BC6  3420               	rlcf	(_var1+1)^0,w,c
   970  000BC8  6E20               	movwf	(_var1+1)^0,c
   971                           
   972                           ;q5.c: 138:             }
   973  000BCA  341E               	rlcf	(_var2+1)^0,w,c
   974  000BCC  301E               	rrcf	(_var2+1)^0,w,c
   975  000BCE  6E1B               	movwf	??_main^0,c
   976  000BD0  301D               	rrcf	_var2^0,w,c
   977  000BD2  6E1D               	movwf	_var2^0,c
   978  000BD4  C01B  F01E         	movff	??_main,_var2+1
   979                           
   980                           ;q5.c: 139:             if (caracter == 'F')
   981  000BD8  501F               	movf	_var1^0,w,c
   982  000BDA  101D               	iorwf	_var2^0,w,c
   983  000BDC  6E8C               	movwf	140,c	;volatile
   984  000BDE                     
   985                           ;q5.c: 140:             {
   986  000BDE  0EC3               	movlw	195
   987  000BE0  6E1B               	movwf	??_main^0,c
   988  000BE2  0ECD               	movlw	205
   989  000BE4                     u697:
   990  000BE4  2EE8               	decfsz	wreg,f,c
   991  000BE6  D7FE               	bra	u697
   992  000BE8  2E1B               	decfsz	??_main^0,f,c
   993  000BEA  D7FC               	bra	u697
   994  000BEC  F000               	nop	
   995  000BEE                     l1228:
   996                           
   997                           ;q5.c: 135:                         _delay((unsigned long)((150)*(4000000/4000.0)));
   998  000BEE  0E80               	movlw	128
   999  000BF0  181F               	xorwf	_var1^0,w,c
  1000  000BF2  1020               	iorwf	(_var1+1)^0,w,c
  1001  000BF4  A4D8               	btfss	status,2,c
  1002  000BF6  EFFF  F005         	goto	u511
  1003  000BFA  EF01  F006         	goto	u510
  1004  000BFE                     u511:
  1005  000BFE  EFD5  F005         	goto	l1220
  1006  000C02                     u510:
  1007  000C02  EF25  F006         	goto	l1238
  1008  000C06                     l1230:
  1009                           
  1010                           ;q5.c: 143:                 flag_interrupcao = 0;
  1011  000C06  0E46               	movlw	70
  1012  000C08  1823               	xorwf	_caracter^0,w,c
  1013  000C0A  A4D8               	btfss	status,2,c
  1014  000C0C  EF0A  F006         	goto	u521
  1015  000C10  EF0C  F006         	goto	u520
  1016  000C14                     u521:
  1017  000C14  EF0E  F006         	goto	l1234
  1018  000C18                     u520:
  1019  000C18  EF2E  F006         	goto	l1240
  1020  000C1C                     l1234:
  1021                           
  1022                           ;q5.c: 144:             }
  1023  000C1C  3420               	rlcf	(_var1+1)^0,w,c
  1024  000C1E  3020               	rrcf	(_var1+1)^0,w,c
  1025  000C20  6E1B               	movwf	??_main^0,c
  1026  000C22  301F               	rrcf	_var1^0,w,c
  1027  000C24  6E1F               	movwf	_var1^0,c
  1028  000C26  C01B  F020         	movff	??_main,_var1+1
  1029                           
  1030                           ;q5.c: 145:         }
  1031  000C2A  90D8               	bcf	status,0,c
  1032  000C2C  341D               	rlcf	_var2^0,w,c
  1033  000C2E  6E1D               	movwf	_var2^0,c
  1034  000C30  341E               	rlcf	(_var2+1)^0,w,c
  1035  000C32  6E1E               	movwf	(_var2+1)^0,c
  1036                           
  1037                           ;q5.c: 146:     }
  1038  000C34  501F               	movf	_var1^0,w,c
  1039  000C36  101D               	iorwf	_var2^0,w,c
  1040  000C38  6E8C               	movwf	140,c	;volatile
  1041  000C3A                     
  1042                           ;q5.c: 147: }
  1043  000C3A  0EC3               	movlw	195
  1044  000C3C  6E1B               	movwf	??_main^0,c
  1045  000C3E  0ECD               	movlw	205
  1046  000C40                     u707:
  1047  000C40  2EE8               	decfsz	wreg,f,c
  1048  000C42  D7FE               	bra	u707
  1049  000C44  2E1B               	decfsz	??_main^0,f,c
  1050  000C46  D7FC               	bra	u707
  1051  000C48  F000               	nop	
  1052  000C4A                     l1238:
  1053                           
  1054                           ;q5.c: 142:                 LATD = 0b00000000;
  1055  000C4A  041F               	decf	_var1^0,w,c
  1056  000C4C  1020               	iorwf	(_var1+1)^0,w,c
  1057  000C4E  A4D8               	btfss	status,2,c
  1058  000C50  EF2C  F006         	goto	u531
  1059  000C54  EF2E  F006         	goto	u530
  1060  000C58                     u531:
  1061  000C58  EF03  F006         	goto	l1230
  1062  000C5C                     u530:
  1063  000C5C                     l1240:
  1064                           
  1065                           ;q5.c: 134:                         LATD = (var1 | var2);
  1066  000C5C  0E46               	movlw	70
  1067  000C5E  1823               	xorwf	_caracter^0,w,c
  1068  000C60  A4D8               	btfss	status,2,c
  1069  000C62  EF35  F006         	goto	u541
  1070  000C66  EF37  F006         	goto	u540
  1071  000C6A                     u541:
  1072  000C6A  EFF7  F005         	goto	l1228
  1073  000C6E                     u540:
  1074  000C6E                     l1242:
  1075  000C6E  0E46               	movlw	70
  1076  000C70  1823               	xorwf	_caracter^0,w,c
  1077  000C72  A4D8               	btfss	status,2,c
  1078  000C74  EF3E  F006         	goto	u551
  1079  000C78  EF40  F006         	goto	u550
  1080  000C7C                     u551:
  1081  000C7C  EFAE  F004         	goto	l1130
  1082  000C80                     u550:
  1083  000C80  0E81               	movlw	low STR_12
  1084  000C82  6E05               	movwf	envia_texto_serial@frase^0,c
  1085  000C84  0E08               	movlw	high STR_12
  1086  000C86  6E06               	movwf	(envia_texto_serial@frase+1)^0,c
  1087  000C88  EC54  F007         	call	_envia_texto_serial	;wreg free
  1088  000C8C  0E00               	movlw	0
  1089  000C8E  6E8C               	movwf	140,c	;volatile
  1090  000C90  0E00               	movlw	0
  1091  000C92  6E22               	movwf	(_flag_interrupcao+1)^0,c
  1092  000C94  0E00               	movlw	0
  1093  000C96  6E21               	movwf	_flag_interrupcao^0,c
  1094  000C98  EFAE  F004         	goto	l1130
  1095  000C9C  EF07  F000         	goto	start
  1096  000CA0                     __end_of_main:
  1097                           	callstack 0
  1098                           
  1099 ;; *************** function _inicializa_RS232 *****************
  1100 ;; Defined at:
  1101 ;;		line 22 in file "q5.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;  velocidade      4   14[COMRAM] long 
  1104 ;;  modo            2   18[COMRAM] int 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  valor           2   20[COMRAM] int 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1116 ;;      Params:         6       0       0       0       0       0       0       0       0
  1117 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1119 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1120 ;;Total ram usage:       12 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    2
  1123 ;; This function calls:
  1124 ;;		___aldiv
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text1
  1131  000DAC                     __ptext1:
  1132                           	callstack 0
  1133  000DAC                     _inicializa_RS232:
  1134                           	callstack 28
  1135  000DAC                     
  1136                           ;q5.c: 22:     };q5.c: 23:     SPBRG = valor;;q5.c: 24:     RCIE = 1;
  1137  000DAC  0E90               	movlw	144
  1138  000DAE  6EAB               	movwf	171,c	;volatile
  1139  000DB0                     
  1140                           ;q5.c: 25:     TXIE = 0;;q5.c: 26: 
  1141  000DB0  0413               	decf	inicializa_RS232@modo^0,w,c
  1142  000DB2  1014               	iorwf	(inicializa_RS232@modo+1)^0,w,c
  1143  000DB4  A4D8               	btfss	status,2,c
  1144  000DB6  EFDF  F006         	goto	u361
  1145  000DBA  EFE1  F006         	goto	u360
  1146  000DBE                     u361:
  1147  000DBE  EF19  F007         	goto	l1086
  1148  000DC2                     u360:
  1149  000DC2                     
  1150                           ;q5.c: 27: }
  1151  000DC2  0E24               	movlw	36
  1152  000DC4  6EAC               	movwf	172,c	;volatile
  1153  000DC6                     
  1154                           ;q5.c: 28: 
  1155  000DC6  C00F  F005         	movff	inicializa_RS232@velocidade,___aldiv@divisor
  1156  000DCA  C010  F006         	movff	inicializa_RS232@velocidade+1,___aldiv@divisor+1
  1157  000DCE  C011  F007         	movff	inicializa_RS232@velocidade+2,___aldiv@divisor+2
  1158  000DD2  C012  F008         	movff	inicializa_RS232@velocidade+3,___aldiv@divisor+3
  1159  000DD6  0E00               	movlw	0
  1160  000DD8  6E01               	movwf	___aldiv@dividend^0,c
  1161  000DDA  0E09               	movlw	9
  1162  000DDC  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1163  000DDE  0E3D               	movlw	61
  1164  000DE0  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1165  000DE2  0E00               	movlw	0
  1166  000DE4  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1167  000DE6  EC50  F006         	call	___aldiv	;wreg free
  1168  000DEA  0EF0               	movlw	240
  1169  000DEC  2401               	addwf	?___aldiv^0,w,c
  1170  000DEE  6E17               	movwf	_inicializa_RS232$706^0,c
  1171  000DF0  0EFF               	movlw	255
  1172  000DF2  2002               	addwfc	(?___aldiv+1)^0,w,c
  1173  000DF4  6E18               	movwf	(_inicializa_RS232$706+1)^0,c
  1174  000DF6  0EFF               	movlw	255
  1175  000DF8  2003               	addwfc	(?___aldiv+2)^0,w,c
  1176  000DFA  6E19               	movwf	(_inicializa_RS232$706+2)^0,c
  1177  000DFC  0EFF               	movlw	255
  1178  000DFE  2004               	addwfc	(?___aldiv+3)^0,w,c
  1179  000E00  6E1A               	movwf	(_inicializa_RS232$706+3)^0,c
  1180  000E02                     
  1181                           ;q5.c: 28: 
  1182  000E02  C017  F001         	movff	_inicializa_RS232$706,___aldiv@dividend
  1183  000E06  C018  F002         	movff	_inicializa_RS232$706+1,___aldiv@dividend+1
  1184  000E0A  C019  F003         	movff	_inicializa_RS232$706+2,___aldiv@dividend+2
  1185  000E0E  C01A  F004         	movff	_inicializa_RS232$706+3,___aldiv@dividend+3
  1186  000E12  0E10               	movlw	16
  1187  000E14  6E05               	movwf	___aldiv@divisor^0,c
  1188  000E16  0E00               	movlw	0
  1189  000E18  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1190  000E1A  0E00               	movlw	0
  1191  000E1C  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1192  000E1E  0E00               	movlw	0
  1193  000E20  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1194  000E22  EC50  F006         	call	___aldiv	;wreg free
  1195  000E26  C001  F015         	movff	?___aldiv,inicializa_RS232@valor
  1196  000E2A  C002  F016         	movff	?___aldiv+1,inicializa_RS232@valor+1
  1197                           
  1198                           ;q5.c: 29: void envia_serial(char valor)
  1199  000E2E  EF4F  F007         	goto	l1092
  1200  000E32                     l1086:
  1201                           
  1202                           ;q5.c: 31:     TXIF = 0;
  1203  000E32  0E20               	movlw	32
  1204  000E34  6EAC               	movwf	172,c	;volatile
  1205  000E36                     
  1206                           ;q5.c: 32:     TXREG = valor;
  1207  000E36  C00F  F005         	movff	inicializa_RS232@velocidade,___aldiv@divisor
  1208  000E3A  C010  F006         	movff	inicializa_RS232@velocidade+1,___aldiv@divisor+1
  1209  000E3E  C011  F007         	movff	inicializa_RS232@velocidade+2,___aldiv@divisor+2
  1210  000E42  C012  F008         	movff	inicializa_RS232@velocidade+3,___aldiv@divisor+3
  1211  000E46  0E00               	movlw	0
  1212  000E48  6E01               	movwf	___aldiv@dividend^0,c
  1213  000E4A  0E09               	movlw	9
  1214  000E4C  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1215  000E4E  0E3D               	movlw	61
  1216  000E50  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1217  000E52  0E00               	movlw	0
  1218  000E54  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1219  000E56  EC50  F006         	call	___aldiv	;wreg free
  1220  000E5A  0EC0               	movlw	192
  1221  000E5C  2401               	addwf	?___aldiv^0,w,c
  1222  000E5E  6E17               	movwf	_inicializa_RS232$706^0,c
  1223  000E60  0EFF               	movlw	255
  1224  000E62  2002               	addwfc	(?___aldiv+1)^0,w,c
  1225  000E64  6E18               	movwf	(_inicializa_RS232$706+1)^0,c
  1226  000E66  0EFF               	movlw	255
  1227  000E68  2003               	addwfc	(?___aldiv+2)^0,w,c
  1228  000E6A  6E19               	movwf	(_inicializa_RS232$706+2)^0,c
  1229  000E6C  0EFF               	movlw	255
  1230  000E6E  2004               	addwfc	(?___aldiv+3)^0,w,c
  1231  000E70  6E1A               	movwf	(_inicializa_RS232$706+3)^0,c
  1232  000E72                     
  1233                           ;q5.c: 32:     TXREG = valor;
  1234  000E72  C017  F001         	movff	_inicializa_RS232$706,___aldiv@dividend
  1235  000E76  C018  F002         	movff	_inicializa_RS232$706+1,___aldiv@dividend+1
  1236  000E7A  C019  F003         	movff	_inicializa_RS232$706+2,___aldiv@dividend+2
  1237  000E7E  C01A  F004         	movff	_inicializa_RS232$706+3,___aldiv@dividend+3
  1238  000E82  0E40               	movlw	64
  1239  000E84  6E05               	movwf	___aldiv@divisor^0,c
  1240  000E86  0E00               	movlw	0
  1241  000E88  6E06               	movwf	(___aldiv@divisor+1)^0,c
  1242  000E8A  0E00               	movlw	0
  1243  000E8C  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1244  000E8E  0E00               	movlw	0
  1245  000E90  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1246  000E92  EC50  F006         	call	___aldiv	;wreg free
  1247  000E96  C001  F015         	movff	?___aldiv,inicializa_RS232@valor
  1248  000E9A  C002  F016         	movff	?___aldiv+1,inicializa_RS232@valor+1
  1249  000E9E                     l1092:
  1250                           
  1251                           ;q5.c: 35: void envia_texto_serial(const char frase[])
  1252  000E9E  C015  FFAF         	movff	inicializa_RS232@valor,4015	;volatile
  1253  000EA2                     
  1254                           ;q5.c: 36: {
  1255  000EA2  8A9D               	bsf	3997,5,c	;volatile
  1256  000EA4                     
  1257                           ;q5.c: 37:     char indice = 0;
  1258  000EA4  989D               	bcf	3997,4,c	;volatile
  1259  000EA6  0012               	return		;funcret
  1260  000EA8                     __end_of_inicializa_RS232:
  1261                           	callstack 0
  1262                           
  1263 ;; *************** function ___aldiv *****************
  1264 ;; Defined at:
  1265 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\aldiv.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;  dividend        4    0[COMRAM] long 
  1268 ;;  divisor         4    4[COMRAM] long 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  quotient        4   10[COMRAM] long 
  1271 ;;  sign            1    9[COMRAM] unsigned char 
  1272 ;;  counter         1    8[COMRAM] unsigned char 
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  4    0[COMRAM] long 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1282 ;;      Params:         8       0       0       0       0       0       0       0       0
  1283 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1285 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1286 ;;Total ram usage:       14 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    1
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_inicializa_RS232
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text2
  1297  000CA0                     __ptext2:
  1298                           	callstack 0
  1299  000CA0                     ___aldiv:
  1300                           	callstack 28
  1301  000CA0  0E00               	movlw	0
  1302  000CA2  6E0A               	movwf	___aldiv@sign^0,c
  1303  000CA4  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  1304  000CA6  EF59  F006         	goto	u300
  1305  000CAA  EF57  F006         	goto	u301
  1306  000CAE                     u301:
  1307  000CAE  EF63  F006         	goto	l1040
  1308  000CB2                     u300:
  1309  000CB2  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  1310  000CB4  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  1311  000CB6  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  1312  000CB8  6C05               	negf	___aldiv@divisor^0,c
  1313  000CBA  0E00               	movlw	0
  1314  000CBC  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  1315  000CBE  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  1316  000CC0  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  1317  000CC2  0E01               	movlw	1
  1318  000CC4  6E0A               	movwf	___aldiv@sign^0,c
  1319  000CC6                     l1040:
  1320  000CC6  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  1321  000CC8  EF6A  F006         	goto	u310
  1322  000CCC  EF68  F006         	goto	u311
  1323  000CD0                     u311:
  1324  000CD0  EF74  F006         	goto	l1046
  1325  000CD4                     u310:
  1326  000CD4  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  1327  000CD6  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  1328  000CD8  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  1329  000CDA  6C01               	negf	___aldiv@dividend^0,c
  1330  000CDC  0E00               	movlw	0
  1331  000CDE  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  1332  000CE0  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  1333  000CE2  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  1334  000CE4  0E01               	movlw	1
  1335  000CE6  1A0A               	xorwf	___aldiv@sign^0,f,c
  1336  000CE8                     l1046:
  1337  000CE8  0E00               	movlw	0
  1338  000CEA  6E0B               	movwf	___aldiv@quotient^0,c
  1339  000CEC  0E00               	movlw	0
  1340  000CEE  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  1341  000CF0  0E00               	movlw	0
  1342  000CF2  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  1343  000CF4  0E00               	movlw	0
  1344  000CF6  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  1345  000CF8  5005               	movf	___aldiv@divisor^0,w,c
  1346  000CFA  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  1347  000CFC  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  1348  000CFE  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  1349  000D00  B4D8               	btfsc	status,2,c
  1350  000D02  EF85  F006         	goto	u321
  1351  000D06  EF87  F006         	goto	u320
  1352  000D0A                     u321:
  1353  000D0A  EFBD  F006         	goto	l1068
  1354  000D0E                     u320:
  1355  000D0E  0E01               	movlw	1
  1356  000D10  6E09               	movwf	___aldiv@counter^0,c
  1357  000D12  EF91  F006         	goto	l1054
  1358  000D16                     l1052:
  1359  000D16  90D8               	bcf	status,0,c
  1360  000D18  3605               	rlcf	___aldiv@divisor^0,f,c
  1361  000D1A  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  1362  000D1C  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  1363  000D1E  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  1364  000D20  2A09               	incf	___aldiv@counter^0,f,c
  1365  000D22                     l1054:
  1366  000D22  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  1367  000D24  EF96  F006         	goto	u331
  1368  000D28  EF98  F006         	goto	u330
  1369  000D2C                     u331:
  1370  000D2C  EF8B  F006         	goto	l1052
  1371  000D30                     u330:
  1372  000D30                     l1056:
  1373  000D30  90D8               	bcf	status,0,c
  1374  000D32  360B               	rlcf	___aldiv@quotient^0,f,c
  1375  000D34  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  1376  000D36  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  1377  000D38  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  1378  000D3A  5005               	movf	___aldiv@divisor^0,w,c
  1379  000D3C  5C01               	subwf	___aldiv@dividend^0,w,c
  1380  000D3E  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1381  000D40  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  1382  000D42  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1383  000D44  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  1384  000D46  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1385  000D48  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  1386  000D4A  A0D8               	btfss	status,0,c
  1387  000D4C  EFAA  F006         	goto	u341
  1388  000D50  EFAC  F006         	goto	u340
  1389  000D54                     u341:
  1390  000D54  EFB5  F006         	goto	l1064
  1391  000D58                     u340:
  1392  000D58  5005               	movf	___aldiv@divisor^0,w,c
  1393  000D5A  5E01               	subwf	___aldiv@dividend^0,f,c
  1394  000D5C  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1395  000D5E  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  1396  000D60  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1397  000D62  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  1398  000D64  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1399  000D66  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  1400  000D68  800B               	bsf	___aldiv@quotient^0,0,c
  1401  000D6A                     l1064:
  1402  000D6A  90D8               	bcf	status,0,c
  1403  000D6C  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  1404  000D6E  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  1405  000D70  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  1406  000D72  3205               	rrcf	___aldiv@divisor^0,f,c
  1407  000D74  2E09               	decfsz	___aldiv@counter^0,f,c
  1408  000D76  EF98  F006         	goto	l1056
  1409  000D7A                     l1068:
  1410  000D7A  500A               	movf	___aldiv@sign^0,w,c
  1411  000D7C  B4D8               	btfsc	status,2,c
  1412  000D7E  EFC3  F006         	goto	u351
  1413  000D82  EFC5  F006         	goto	u350
  1414  000D86                     u351:
  1415  000D86  EFCD  F006         	goto	l1072
  1416  000D8A                     u350:
  1417  000D8A  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  1418  000D8C  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  1419  000D8E  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  1420  000D90  6C0B               	negf	___aldiv@quotient^0,c
  1421  000D92  0E00               	movlw	0
  1422  000D94  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  1423  000D96  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  1424  000D98  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  1425  000D9A                     l1072:
  1426  000D9A  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1427  000D9E  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1428  000DA2  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1429  000DA6  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1430  000DAA  0012               	return		;funcret
  1431  000DAC                     __end_of___aldiv:
  1432                           	callstack 0
  1433                           
  1434 ;; *************** function _envia_texto_serial *****************
  1435 ;; Defined at:
  1436 ;;		line 47 in file "q5.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  frase           2    4[COMRAM] PTR const unsigned char 
  1439 ;;		 -> STR_12(31), STR_11(21), STR_10(23), STR_9(49), 
  1440 ;;		 -> STR_8(39), STR_7(40), STR_6(31), STR_5(20), 
  1441 ;;		 -> STR_4(22), STR_3(48), STR_2(38), STR_1(39), 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;  indice          1    9[COMRAM] unsigned char 
  1444 ;;  tamanho         1    8[COMRAM] unsigned char 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1454 ;;      Params:         2       0       0       0       0       0       0       0       0
  1455 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1456 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1457 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1458 ;;Total ram usage:        6 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    2
  1461 ;; This function calls:
  1462 ;;		_envia_serial
  1463 ;;		_strlen
  1464 ;; This function is called by:
  1465 ;;		_main
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text3
  1470  000EA8                     __ptext3:
  1471                           	callstack 0
  1472  000EA8                     _envia_texto_serial:
  1473                           	callstack 28
  1474  000EA8                     
  1475                           ;q5.c: 47: {;q5.c: 48: ;q5.c: 49:     TRISC = 0b11000000;
  1476  000EA8  0E00               	movlw	0
  1477  000EAA  6E0A               	movwf	envia_texto_serial@indice^0,c
  1478  000EAC                     
  1479                           ;q5.c: 50:     inicializa_RS232(9600,1);
  1480  000EAC  C005  F001         	movff	envia_texto_serial@frase,strlen@s
  1481  000EB0  C006  F002         	movff	envia_texto_serial@frase+1,strlen@s+1
  1482  000EB4  EC79  F007         	call	_strlen	;wreg free
  1483  000EB8  5001               	movf	?_strlen^0,w,c
  1484  000EBA  6E09               	movwf	envia_texto_serial@tamanho^0,c
  1485                           
  1486                           ;q5.c: 52:     PEIE = 1;
  1487  000EBC  EF6F  F007         	goto	l1106
  1488  000EC0                     l1102:
  1489                           
  1490                           ;q5.c: 53:     TRISD = 0;
  1491  000EC0  500A               	movf	envia_texto_serial@indice^0,w,c
  1492  000EC2  2405               	addwf	envia_texto_serial@frase^0,w,c
  1493  000EC4  6E07               	movwf	??_envia_texto_serial^0,c
  1494  000EC6  0E00               	movlw	0
  1495  000EC8  2006               	addwfc	(envia_texto_serial@frase+1)^0,w,c
  1496  000ECA  6E08               	movwf	(??_envia_texto_serial+1)^0,c
  1497  000ECC  C007  FFF6         	movff	??_envia_texto_serial,tblptrl
  1498  000ED0  C008  FFF7         	movff	??_envia_texto_serial+1,tblptrh
  1499  000ED4                     	if	0	;tblptru may be non-zero
  1500  000ED4                     	endif
  1501  000ED4                     	if	0	;tblptru may be non-zero
  1502  000ED4                     	endif
  1503  000ED4  0008               	tblrd		*
  1504  000ED6  50F5               	movf	tablat,w,c
  1505  000ED8  ECA5  F007         	call	_envia_serial
  1506  000EDC                     
  1507                           ;q5.c: 54: 
  1508  000EDC  2A0A               	incf	envia_texto_serial@indice^0,f,c
  1509  000EDE                     l1106:
  1510                           
  1511                           ;q5.c: 52:     PEIE = 1;
  1512  000EDE  5009               	movf	envia_texto_serial@tamanho^0,w,c
  1513  000EE0  5C0A               	subwf	envia_texto_serial@indice^0,w,c
  1514  000EE2  A0D8               	btfss	status,0,c
  1515  000EE4  EF76  F007         	goto	u371
  1516  000EE8  EF78  F007         	goto	u370
  1517  000EEC                     u371:
  1518  000EEC  EF60  F007         	goto	l1102
  1519  000EF0                     u370:
  1520  000EF0  0012               	return		;funcret
  1521  000EF2                     __end_of_envia_texto_serial:
  1522                           	callstack 0
  1523                           
  1524 ;; *************** function _strlen *****************
  1525 ;; Defined at:
  1526 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c99\common\strlen.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1529 ;;		 -> STR_12(31), STR_11(21), STR_10(23), STR_9(49), 
  1530 ;;		 -> STR_8(39), STR_7(40), STR_6(31), STR_5(20), 
  1531 ;;		 -> STR_4(22), STR_3(48), STR_2(38), STR_1(39), 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1534 ;;		 -> STR_12(31), STR_11(21), STR_10(23), STR_9(49), 
  1535 ;;		 -> STR_8(39), STR_7(40), STR_6(31), STR_5(20), 
  1536 ;;		 -> STR_4(22), STR_3(48), STR_2(38), STR_1(39), 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  2    0[COMRAM] unsigned int 
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1546 ;;      Params:         2       0       0       0       0       0       0       0       0
  1547 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1549 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1550 ;;Total ram usage:        4 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    1
  1553 ;; This function calls:
  1554 ;;		Nothing
  1555 ;; This function is called by:
  1556 ;;		_envia_texto_serial
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text4
  1561  000EF2                     __ptext4:
  1562                           	callstack 0
  1563  000EF2                     _strlen:
  1564                           	callstack 28
  1565  000EF2  C001  F003         	movff	strlen@s,strlen@a
  1566  000EF6  C002  F004         	movff	strlen@s+1,strlen@a+1
  1567  000EFA  EF81  F007         	goto	l1026
  1568  000EFE                     l1024:
  1569  000EFE  4A01               	infsnz	strlen@s^0,f,c
  1570  000F00  2A02               	incf	(strlen@s+1)^0,f,c
  1571  000F02                     l1026:
  1572  000F02  C001  FFF6         	movff	strlen@s,tblptrl
  1573  000F06  C002  FFF7         	movff	strlen@s+1,tblptrh
  1574  000F0A                     	if	0	;tblptru may be non-zero
  1575  000F0A                     	endif
  1576  000F0A                     	if	0	;tblptru may be non-zero
  1577  000F0A                     	endif
  1578  000F0A  0008               	tblrd		*
  1579  000F0C  50F5               	movf	tablat,w,c
  1580  000F0E  0900               	iorlw	0
  1581  000F10  A4D8               	btfss	status,2,c
  1582  000F12  EF8D  F007         	goto	u291
  1583  000F16  EF8F  F007         	goto	u290
  1584  000F1A                     u291:
  1585  000F1A  EF7F  F007         	goto	l1024
  1586  000F1E                     u290:
  1587  000F1E  5003               	movf	strlen@a^0,w,c
  1588  000F20  5C01               	subwf	strlen@s^0,w,c
  1589  000F22  6E01               	movwf	?_strlen^0,c
  1590  000F24  5004               	movf	(strlen@a+1)^0,w,c
  1591  000F26  5802               	subwfb	(strlen@s+1)^0,w,c
  1592  000F28  6E02               	movwf	(?_strlen+1)^0,c
  1593  000F2A  0012               	return		;funcret
  1594  000F2C                     __end_of_strlen:
  1595                           	callstack 0
  1596                           
  1597 ;; *************** function _envia_serial *****************
  1598 ;; Defined at:
  1599 ;;		line 41 in file "q5.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;  valor           1    wreg     unsigned char 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  valor           1    0[COMRAM] unsigned char 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1613 ;;      Params:         0       0       0       0       0       0       0       0       0
  1614 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1616 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1617 ;;Total ram usage:        1 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    1
  1620 ;; This function calls:
  1621 ;;		Nothing
  1622 ;; This function is called by:
  1623 ;;		_envia_texto_serial
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text5
  1628  000F4A                     __ptext5:
  1629                           	callstack 0
  1630  000F4A                     _envia_serial:
  1631                           	callstack 28
  1632                           
  1633                           ;incstack = 0
  1634                           ;envia_serial@valor stored from wreg
  1635  000F4A  6E01               	movwf	envia_serial@valor^0,c
  1636  000F4C                     
  1637                           ;q5.c: 41:         envia_serial (frase[indice]);;q5.c: 42:         indice++;;q5.c: 43:  
      +                             }
  1638  000F4C  989E               	bcf	3998,4,c	;volatile
  1639  000F4E                     
  1640                           ;q5.c: 44: }
  1641  000F4E  C001  FFAD         	movff	envia_serial@valor,4013	;volatile
  1642  000F52                     l53:
  1643  000F52  A89E               	btfss	3998,4,c	;volatile
  1644  000F54  EFAE  F007         	goto	u11
  1645  000F58  EFB0  F007         	goto	u10
  1646  000F5C                     u11:
  1647  000F5C  EFA9  F007         	goto	l53
  1648  000F60                     u10:
  1649  000F60  0012               	return		;funcret
  1650  000F62                     __end_of_envia_serial:
  1651                           	callstack 0
  1652                           
  1653 ;; *************** function _RS232 *****************
  1654 ;; Defined at:
  1655 ;;		line 15 in file "q5.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1669 ;;      Params:         0       0       0       0       0       0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1672 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		Interrupt level 2
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	intcode
  1683  000008                     __pintcode:
  1684                           	callstack 0
  1685  000008                     _RS232:
  1686                           	callstack 28
  1687                           
  1688                           ;incstack = 0
  1689  000008  8224               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1690  00000A  EDB1  F007         	call	int_func,f	;refresh shadow registers
  1691                           
  1692                           	psect	intcode_body
  1693  000F62                     __pintcode_body:
  1694                           	callstack 28
  1695  000F62                     int_func:
  1696                           	callstack 28
  1697  000F62  0006               	pop		; remove dummy address from shadow register refresh
  1698  000F64                     
  1699                           ;q5.c: 17:     }
  1700  000F64  CFAE F023          	movff	4014,_caracter	;volatile
  1701  000F68                     
  1702                           ;q5.c: 18:     else {
  1703  000F68  0E00               	movlw	0
  1704  000F6A  6E22               	movwf	(_flag_interrupcao+1)^0,c
  1705  000F6C  0E01               	movlw	1
  1706  000F6E  6E21               	movwf	_flag_interrupcao^0,c
  1707  000F70                     
  1708                           ;q5.c: 19:         TXSTA = 0X20;
  1709  000F70  9A9E               	bcf	3998,5,c	;volatile
  1710  000F72  9224               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1711  000F74  0011               	retfie		f
  1712  000F76                     __end_of_RS232:
  1713                           	callstack 0
  1714                           
  1715                           	psect	rparam
  1716  0000                     
  1717                           	psect	temp
  1718  000024                     btemp:
  1719                           	callstack 0
  1720  000024                     	ds	1
  1721  0000                     int$flags	set	btemp
  1722  0000                     wtemp8	set	btemp+1
  1723  0000                     ttemp5	set	btemp+1
  1724  0000                     ttemp6	set	btemp+4
  1725  0000                     ttemp7	set	btemp+8
  1726                           
  1727                           	psect	idloc
  1728                           
  1729                           ;Config register IDLOC0 @ 0x200000
  1730                           ;	unspecified, using default values
  1731  200000                     	org	2097152
  1732  200000  FF                 	db	255
  1733                           
  1734                           ;Config register IDLOC1 @ 0x200001
  1735                           ;	unspecified, using default values
  1736  200001                     	org	2097153
  1737  200001  FF                 	db	255
  1738                           
  1739                           ;Config register IDLOC2 @ 0x200002
  1740                           ;	unspecified, using default values
  1741  200002                     	org	2097154
  1742  200002  FF                 	db	255
  1743                           
  1744                           ;Config register IDLOC3 @ 0x200003
  1745                           ;	unspecified, using default values
  1746  200003                     	org	2097155
  1747  200003  FF                 	db	255
  1748                           
  1749                           ;Config register IDLOC4 @ 0x200004
  1750                           ;	unspecified, using default values
  1751  200004                     	org	2097156
  1752  200004  FF                 	db	255
  1753                           
  1754                           ;Config register IDLOC5 @ 0x200005
  1755                           ;	unspecified, using default values
  1756  200005                     	org	2097157
  1757  200005  FF                 	db	255
  1758                           
  1759                           ;Config register IDLOC6 @ 0x200006
  1760                           ;	unspecified, using default values
  1761  200006                     	org	2097158
  1762  200006  FF                 	db	255
  1763                           
  1764                           ;Config register IDLOC7 @ 0x200007
  1765                           ;	unspecified, using default values
  1766  200007                     	org	2097159
  1767  200007  FF                 	db	255
  1768                           
  1769                           	psect	config
  1770                           
  1771                           ;Config register CONFIG1L @ 0x300000
  1772                           ;	unspecified, using default values
  1773                           ;	PLL Prescaler Selection bits
  1774                           ;	PLLDIV = 0x0, unprogrammed default
  1775                           ;	System Clock Postscaler Selection bits
  1776                           ;	CPUDIV = 0x0, unprogrammed default
  1777                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1778                           ;	USBDIV = 0x0, unprogrammed default
  1779  300000                     	org	3145728
  1780  300000  00                 	db	0
  1781                           
  1782                           ;Config register CONFIG1H @ 0x300001
  1783                           ;	Oscillator Selection bits
  1784                           ;	FOSC = HS, HS oscillator (HS)
  1785                           ;	Fail-Safe Clock Monitor Enable bit
  1786                           ;	FCMEN = 0x0, unprogrammed default
  1787                           ;	Internal/External Oscillator Switchover bit
  1788                           ;	IESO = 0x0, unprogrammed default
  1789  300001                     	org	3145729
  1790  300001  0C                 	db	12
  1791                           
  1792                           ;Config register CONFIG2L @ 0x300002
  1793                           ;	unspecified, using default values
  1794                           ;	Power-up Timer Enable bit
  1795                           ;	PWRT = 0x1, unprogrammed default
  1796                           ;	Brown-out Reset Enable bits
  1797                           ;	BOR = 0x3, unprogrammed default
  1798                           ;	Brown-out Reset Voltage bits
  1799                           ;	BORV = 0x3, unprogrammed default
  1800                           ;	USB Voltage Regulator Enable bit
  1801                           ;	VREGEN = 0x0, unprogrammed default
  1802  300002                     	org	3145730
  1803  300002  1F                 	db	31
  1804                           
  1805                           ;Config register CONFIG2H @ 0x300003
  1806                           ;	Watchdog Timer Enable bit
  1807                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1808                           ;	Watchdog Timer Postscale Select bits
  1809                           ;	WDTPS = 0xF, unprogrammed default
  1810  300003                     	org	3145731
  1811  300003  1E                 	db	30
  1812                           
  1813                           ; Padding undefined space
  1814  300004                     	org	3145732
  1815  300004  FF                 	db	255
  1816                           
  1817                           ;Config register CONFIG3H @ 0x300005
  1818                           ;	CCP2 MUX bit
  1819                           ;	CCP2MX = 0x1, unprogrammed default
  1820                           ;	PORTB A/D Enable bit
  1821                           ;	PBADEN = 0x1, unprogrammed default
  1822                           ;	Low-Power Timer 1 Oscillator Enable bit
  1823                           ;	LPT1OSC = 0x0, unprogrammed default
  1824                           ;	MCLR Pin Enable bit
  1825                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  1826  300005                     	org	3145733
  1827  300005  03                 	db	3
  1828                           
  1829                           ;Config register CONFIG4L @ 0x300006
  1830                           ;	unspecified, using default values
  1831                           ;	Stack Full/Underflow Reset Enable bit
  1832                           ;	STVREN = 0x1, unprogrammed default
  1833                           ;	Single-Supply ICSP Enable bit
  1834                           ;	LVP = 0x1, unprogrammed default
  1835                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1836                           ;	ICPRT = 0x0, unprogrammed default
  1837                           ;	Extended Instruction Set Enable bit
  1838                           ;	XINST = 0x0, unprogrammed default
  1839                           ;	Background Debugger Enable bit
  1840                           ;	DEBUG = 0x1, unprogrammed default
  1841  300006                     	org	3145734
  1842  300006  85                 	db	133
  1843                           
  1844                           ; Padding undefined space
  1845  300007                     	org	3145735
  1846  300007  FF                 	db	255
  1847                           
  1848                           ;Config register CONFIG5L @ 0x300008
  1849                           ;	unspecified, using default values
  1850                           ;	Code Protection bit
  1851                           ;	CP0 = 0x1, unprogrammed default
  1852                           ;	Code Protection bit
  1853                           ;	CP1 = 0x1, unprogrammed default
  1854                           ;	Code Protection bit
  1855                           ;	CP2 = 0x1, unprogrammed default
  1856                           ;	Code Protection bit
  1857                           ;	CP3 = 0x1, unprogrammed default
  1858  300008                     	org	3145736
  1859  300008  0F                 	db	15
  1860                           
  1861                           ;Config register CONFIG5H @ 0x300009
  1862                           ;	unspecified, using default values
  1863                           ;	Boot Block Code Protection bit
  1864                           ;	CPB = 0x1, unprogrammed default
  1865                           ;	Data EEPROM Code Protection bit
  1866                           ;	CPD = 0x1, unprogrammed default
  1867  300009                     	org	3145737
  1868  300009  C0                 	db	192
  1869                           
  1870                           ;Config register CONFIG6L @ 0x30000A
  1871                           ;	unspecified, using default values
  1872                           ;	Write Protection bit
  1873                           ;	WRT0 = 0x1, unprogrammed default
  1874                           ;	Write Protection bit
  1875                           ;	WRT1 = 0x1, unprogrammed default
  1876                           ;	Write Protection bit
  1877                           ;	WRT2 = 0x1, unprogrammed default
  1878                           ;	Write Protection bit
  1879                           ;	WRT3 = 0x1, unprogrammed default
  1880  30000A                     	org	3145738
  1881  30000A  0F                 	db	15
  1882                           
  1883                           ;Config register CONFIG6H @ 0x30000B
  1884                           ;	unspecified, using default values
  1885                           ;	Configuration Register Write Protection bit
  1886                           ;	WRTC = 0x1, unprogrammed default
  1887                           ;	Boot Block Write Protection bit
  1888                           ;	WRTB = 0x1, unprogrammed default
  1889                           ;	Data EEPROM Write Protection bit
  1890                           ;	WRTD = 0x1, unprogrammed default
  1891  30000B                     	org	3145739
  1892  30000B  E0                 	db	224
  1893                           
  1894                           ;Config register CONFIG7L @ 0x30000C
  1895                           ;	unspecified, using default values
  1896                           ;	Table Read Protection bit
  1897                           ;	EBTR0 = 0x1, unprogrammed default
  1898                           ;	Table Read Protection bit
  1899                           ;	EBTR1 = 0x1, unprogrammed default
  1900                           ;	Table Read Protection bit
  1901                           ;	EBTR2 = 0x1, unprogrammed default
  1902                           ;	Table Read Protection bit
  1903                           ;	EBTR3 = 0x1, unprogrammed default
  1904  30000C                     	org	3145740
  1905  30000C  0F                 	db	15
  1906                           
  1907                           ;Config register CONFIG7H @ 0x30000D
  1908                           ;	unspecified, using default values
  1909                           ;	Boot Block Table Read Protection bit
  1910                           ;	EBTRB = 0x1, unprogrammed default
  1911  30000D                     	org	3145741
  1912  30000D  40                 	db	64
  1913                           tosu	equ	0xFFF
  1914                           tosh	equ	0xFFE
  1915                           tosl	equ	0xFFD
  1916                           stkptr	equ	0xFFC
  1917                           pclatu	equ	0xFFB
  1918                           pclath	equ	0xFFA
  1919                           pcl	equ	0xFF9
  1920                           tblptru	equ	0xFF8
  1921                           tblptrh	equ	0xFF7
  1922                           tblptrl	equ	0xFF6
  1923                           tablat	equ	0xFF5
  1924                           prodh	equ	0xFF4
  1925                           prodl	equ	0xFF3
  1926                           indf0	equ	0xFEF
  1927                           postinc0	equ	0xFEE
  1928                           postdec0	equ	0xFED
  1929                           preinc0	equ	0xFEC
  1930                           plusw0	equ	0xFEB
  1931                           fsr0h	equ	0xFEA
  1932                           fsr0l	equ	0xFE9
  1933                           wreg	equ	0xFE8
  1934                           indf1	equ	0xFE7
  1935                           postinc1	equ	0xFE6
  1936                           postdec1	equ	0xFE5
  1937                           preinc1	equ	0xFE4
  1938                           plusw1	equ	0xFE3
  1939                           fsr1h	equ	0xFE2
  1940                           fsr1l	equ	0xFE1
  1941                           bsr	equ	0xFE0
  1942                           indf2	equ	0xFDF
  1943                           postinc2	equ	0xFDE
  1944                           postdec2	equ	0xFDD
  1945                           preinc2	equ	0xFDC
  1946                           plusw2	equ	0xFDB
  1947                           fsr2h	equ	0xFDA
  1948                           fsr2l	equ	0xFD9
  1949                           status	equ	0xFD8

Data Sizes:
    Strings     234
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_12(CODE[31]), STR_11(CODE[21]), STR_10(CODE[23]), STR_9(CODE[49]), 
		 -> STR_8(CODE[39]), STR_7(CODE[40]), STR_6(CODE[31]), STR_5(CODE[20]), 
		 -> STR_4(CODE[22]), STR_3(CODE[48]), STR_2(CODE[38]), STR_1(CODE[39]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_12(CODE[31]), STR_11(CODE[21]), STR_10(CODE[23]), STR_9(CODE[49]), 
		 -> STR_8(CODE[39]), STR_7(CODE[40]), STR_6(CODE[31]), STR_5(CODE[20]), 
		 -> STR_4(CODE[22]), STR_3(CODE[48]), STR_2(CODE[38]), STR_1(CODE[39]), 

    envia_texto_serial@frase	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_12(CODE[31]), STR_11(CODE[21]), STR_10(CODE[23]), STR_9(CODE[49]), 
		 -> STR_8(CODE[39]), STR_7(CODE[40]), STR_6(CODE[31]), STR_5(CODE[20]), 
		 -> STR_4(CODE[22]), STR_3(CODE[48]), STR_2(CODE[38]), STR_1(CODE[39]), 


Critical Paths under _main in COMRAM

    _main->_inicializa_RS232
    _inicializa_RS232->___aldiv
    _envia_texto_serial->_strlen

Critical Paths under _RS232 in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _RS232 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RS232 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RS232 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RS232 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RS232 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RS232 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RS232 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RS232 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2402
                                             26 COMRAM     2     2      0
                 _envia_texto_serial
                   _inicializa_RS232
 ---------------------------------------------------------------------------------
 (1) _inicializa_RS232                                    12     6      6    1196
                                             14 COMRAM    12     6      6
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     908
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _envia_texto_serial                                   6     4      2    1206
                                              4 COMRAM     6     4      2
                       _envia_serial
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _envia_serial                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _RS232                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _envia_texto_serial
     _envia_serial
     _strlen
   _inicializa_RS232
     ___aldiv

 _RS232 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      23       1       37.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      20        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Wed Jan 06 11:30:51 2021

                         l50 0EA6                           l53 0F52                           l62 0EF0  
                         l56 0F60                           u10 0F60                           u11 0F5C  
          ?_inicializa_RS232 000F                          l184 0DAA                          l782 0F2A  
                        l784 0F4C                          l786 0F4E                          _GIE 007F97  
                        u300 0CB2                          u301 0CAE                          u310 0CD4  
                        u311 0CD0                          u320 0D0E                          u400 09BC  
                        u321 0D0A                          u401 09B8                          u330 0D30  
                        u410 09E2                          u331 0D2C                          u411 09DE  
                        u340 0D58                          u500 0BBC                          u420 09F4  
                        u341 0D54                          u501 0BB8                          u421 09F0  
                        u350 0D8A                          u510 0C02                          u430 0A2E  
                        u351 0D86                          u511 0BFE                          u431 0A2A  
                        u360 0DC2                          u520 0C18                          u440 0A54  
                        u361 0DBE                          u521 0C14                          u441 0A50  
                        u290 0F1E                          u370 0EF0                          u530 0C5C  
                        u450 0A66                          u291 0F1A                          u371 0EEC  
                        u531 0C58                          u451 0A62                          u540 0C6E  
                        u460 0AB4                          u380 096E                          u541 0C6A  
                        u461 0AB0                          u381 096A                          u550 0C80  
                        u470 0AC6                          u390 0980                          u551 0C7C  
                        u471 0AC2                          u607 0A80                          u391 097C  
                        u480 0B64                          u481 0B60                          u617 0A94  
                        u490 0B76                          u707 0C40                          u491 0B72  
                        u627 0AE0                          u637 0AF4                          u647 0B08  
                        u567 099A                          u657 0B1C                          u577 09C2  
                        u667 0B30                          u587 0A0E                          u677 0B44  
                        u597 0A34                          u687 0B8C                          u697 0BE4  
         ??_inicializa_RS232 0015                          wreg 000FE8                         l1100 0EAC  
                       l1022 0EF2                         l1102 0EC0                         l1110 08F0  
                       l1024 0EFE                         l1104 0EDC                         l1040 0CC6  
                       l1032 0CA0                         l1200 0B2A                         l1120 0920  
                       l1112 090C                         l1026 0F02                         l1106 0EDE  
                       l1050 0D0E                         l1042 0CD4                         l1034 0CA4  
                       l1210 0B76                         l1202 0B3E                         l1130 095C  
                       l1122 092C                         l1114 090E                         l1028 0F1E  
                       l1060 0D58                         l1052 0D16                         l1044 0CE4  
                       l1036 0CB2                         l1220 0BAA                         l1212 0B82  
                       l1140 09A4                         l1132 096E                         l1124 0938  
                       l1116 0910                         l1108 08EC                         l1070 0D8A  
                       l1062 0D68                         l1054 0D22                         l1046 0CE8  
                       l1038 0CC2                         l1230 0C06                         l1214 0B86  
                       l1206 0B52                         l1142 09AA                         l1134 0980  
                       l1150 09E2                         l1126 0944                         l1118 0914  
                       l1072 0D9A                         l1064 0D6A                         l1056 0D30  
                       l1048 0CF8                         l1080 0DC2                         l1224 0BC0  
                       l1240 0C5C                         l1216 0B96                         l1208 0B64  
                       l1160 0A1E                         l1152 09F4                         l1144 09BC  
                       l1136 098C                         l1128 0950                         l1066 0D74  
                       l1058 0D3A                         l1090 0E72                         l1082 0DC6  
                       l1234 0C1C                         l1226 0BDE                         l1218 0B9E  
                       l1242 0C6E                         l1170 0A66                         l1162 0A2E  
                       l1154 0A00                         l1138 0994                         l1068 0D7A  
                       l1092 0E9E                         l1084 0E02                         l1076 0DAC  
                       l1244 0C80                         l1236 0C3A                         l1228 0BEE  
                       l1180 0AA2                         l1172 0A72                         l1156 0A08  
                       l1148 09D0                         l1094 0EA2                         l1086 0E32  
                       l1078 0DB0                         l1246 0C8C                         l1238 0C4A  
                       l1190 0AEA                         l1174 0A7A                         l1182 0AB4  
                       l1158 0A18                         l1166 0A42                         l1096 0EA4  
                       l1088 0E36                         l1248 0C90                         l1192 0AEE  
                       l1184 0AC6                         l1176 0A8A                         l1168 0A54  
                       l1098 0EA8                         l1194 0B02                         l1186 0AD2  
                       l1178 0A8E                         l1196 0B12                         l1188 0ADA  
                       l1198 0B26                         STR_1 0833                         STR_2 085B  
                       STR_3 0802                         STR_4 08C0                         STR_5 08D7  
                       STR_6 08A0                         STR_7 0832                         STR_8 085A  
                       STR_9 0801                         _LATD 000F8C                         _PEIE 007F96  
                       _RCIE 007CED                         _RCIF 007CF5                         i2l45 0F72  
                       _TXIE 007CEC                         _TXIF 007CF4                         _main 08EC  
                       _var1 001F                         _var2 001D                         btemp 0024  
                       start 000E                 ___param_bank 000000              __end_of___aldiv 0DAC  
                      ?_main 0001                        STR_10 08BF                        STR_11 08D6  
                      STR_12 0881                        _RS232 0008                        i2l874 0F64  
                      i2l876 0F68                        i2l878 0F70                        _RCREG 000FAE  
                      _RCSTA 000FAB                        _SPBRG 000FAF                        _TRISC 000F94  
                      _TRISD 000F95                        _TXREG 000FAD                        _TXSTA 000FAC  
              ?_envia_serial 0001                        tablat 000FF5                        ttemp5 0025  
                      ttemp6 0028                        ttemp7 002C                        status 000FD8  
                      wtemp8 0025         inicializa_RS232@modo 0013              __initialization 0F2C  
               __end_of_main 0CA0                       ??_main 001B                __activetblptr 000001  
                     ?_RS232 0001   inicializa_RS232@velocidade 000F               ??_envia_serial 0001  
                  ??___aldiv 0009           _envia_texto_serial 0EA8                       clear_0 0F32  
                     _strlen 0EF2          ?_envia_texto_serial 0005    envia_texto_serial@tamanho 0009  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                   __accesstop 0060      __end_of__initialization 0F38  
       ??_envia_texto_serial 0007                ___rparam_used 000001                __end_of_RS232 0F76  
      inicializa_RS232@valor 0015               __pcstackCOMRAM 0001         _inicializa_RS232$706 0017  
                    ??_RS232 0001    __size_of_inicializa_RS232 00FC         __end_of_envia_serial 0F62  
                    ?_strlen 0001            envia_serial@valor 0001                      __Hparam 0000  
                    __Lparam 0000             _flag_interrupcao 0021                      ___aldiv 0CA0  
               __psmallconst 0800                      __pcinit 0F2C                      __ramtop 0800  
                    __ptext0 08EC                      __ptext1 0DAC                      __ptext2 0CA0  
                    __ptext3 0EA8                      __ptext4 0EF2                      __ptext5 0F4A  
            __size_of_strlen 003A             ___aldiv@dividend 0001               __pintcode_body 0F62  
       end_of_initialization 0F38                      int_func 0F62             ___aldiv@quotient 000B  
                    postinc0 000FEE                      strlen@a 0003                      strlen@s 0001  
           _inicializa_RS232 0DAC        __size_of_envia_serial 0018               __end_of_strlen 0F2C  
        start_initialization 0F2C                 _envia_serial 0F4A  __size_of_envia_texto_serial 004A  
                   ??_strlen 0003                  __pbssCOMRAM 001D                    __pintcode 0008  
                   ?___aldiv 0001                  __smallconst 0800               __size_of_RS232 0F6E  
            ___aldiv@divisor 0005              ___aldiv@counter 0009     __end_of_inicializa_RS232 0EA8  
                   __Hrparam 0000                     __Lrparam 0000                 __Lsmallconst 0800  
           __size_of___aldiv 010C     envia_texto_serial@indice 000A                     _caracter 0023  
              __size_of_main 03B4                     int$flags 0024      envia_texto_serial@frase 0005  
                   intlevel2 0000   __end_of_envia_texto_serial 0EF2                 ___aldiv@sign 000A  
